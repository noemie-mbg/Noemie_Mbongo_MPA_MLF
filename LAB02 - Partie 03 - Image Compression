from matplotlib.image import imread
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import numpy as np

# Load the image from file
loaded_image = imread('fish.jpg')

# Display the original image
plt.imshow(loaded_image)
plt.show()

def compress_image(image: np.ndarray, number_of_colours: int) -> np.ndarray:

     # Reshape the image into a 2D array of pixels
    pixels = image.reshape((-1, 3))
    
    # Apply K-Means clustering to find 'number_of_colours' clusters
    kmeans = KMeans(n_clusters=number_of_colours, n_init=10, random_state=0)
    kmeans.fit(pixels)
    
    # Replace each pixel with its closest centroid
    compressed_pixels = kmeans.cluster_centers_[kmeans.labels_]
    compressed_image = compressed_pixels.reshape(image.shape)
    
    return np.uint8(compressed_image)
    
 # Compress the image using 30 colors   
img = compress_image(loaded_image, 30)

# Display the compressed image
plt.figure()
plt.imshow(img)
plt.show()
